<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.let.notice.service.impl.NoticeMapper">

	<resultMap id="notice" type="egovframework.let.notice.service.NoticeVO"> <!-- 변수를 받아오는 resultMap / 쿼리에 대한 라인 수와 속도를 줄여주기 위해 사용  -->
		<result property="boardId" column="BOARD_ID" /> <!-- 변수명은 컬럼명(객체명)과 맞춰준다. 변수명만 확인해서 뭔지 알 수 있게 -->
		<result property="boardSj" column="BOARD_SJ" />
		<result property="boardCn" column="BOARD_CN" />
		<result property="inqireCo" column="INQIRE_CO" /> 
		<result property="creatIp" column="CREAT_IP" /> 
		<result property="signAt" column="SIGN_AT" /> 
		<result property="othbcAt" column="OTHBC_AT" /> 
		<result property="useAt" column="USE_AT" /> 
		<result property="atchFileId" column="ATCH_FILE_ID" /> 
		<result property="frstRegistPnttm" column="FRST_REGIST_PNTTM" /> 
		<result property="frstRegisterId" column="FRST_REGISTER_ID" /> 
	</resultMap> 


	<select id="selectNoticeList" resultType="egovMap">

		<!-- 썸네일을 보여주기 위해. 해당 확장자의 제일 첫 번째 이미지가 썸네일이 된다 -->
		SELECT A.BOARD_ID,
				A.BOARD_SJ,
				A.BOARD_CN,
				A.INQIRE_CO,
				A.CREAT_IP,
				A.SIGN_AT,
				A.OTHBC_AT,
				A.USE_AT,
				A.ATCH_FILE_ID,
				A.FRST_REGIST_PNTTM,
				A.FRST_REGISTER_ID,
				(SELECT
					CONCAT(X.STRE_FILE_NM, '.', X.FILE_EXTSN)
				FROM LETTNFILEDETAIL X
				WHERE X.ATCH_FILE_ID = A.ATCH_FILE_ID
					AND UPPER(FILE_EXTSN) IN ('GIF','JPG','JPEG','BMP','PNG')
				ORDER BY FILE_SN
				LIMIT 1 
				) AS ATCH_FILE_NM
		FROM NOTICE A
		<include refid="selectNoticeListWhere"></include> <!-- 공통으로 사용 가능한건 공통으로 뺀다 -->
		ORDER BY A.FRST_REGIST_PNTTM DESC
		
		<if test='signAt != "Y"'> <!-- 공지글이 아니면 limit가 가지 않는다(limit X). 공지글은 제한 없이 상단에 출력 -->
			LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
		</if>
	</select>
	
	
	<select id="selectNoticeListCnt" resultType="java.lang.Integer">
		SELECT COUNT(*) CNT FROM NOTICE A
		<include refid="selectNoticeListWhere"></include>
	</select>
	
	
	<sql id="selectNoticeListWhere">
		<where>
			A.USE_AT = 'Y'
			<choose>
				<when test='signAt == "Y"'>
					AND A.SIGN_AT = 'Y'
				</when>
				<otherwise>
					<if test='searchCondition != null and searchCondition != ""'>
						<choose>
							<!-- 전체 검색 시 쿼리에 OR를 써 -->
							<when test='searchCondition == "0"'> <!-- % 를 양쪽에 사용하면 속도가 느림. 실무에선 앞이나 뒤 둘 중 하나만 사용 -->
								AND A.BOARD_SJ LIKE CONCAT('%', #{searchKeyword}, '%')
							</when>
							<when test='searchCondition == "1"'>
								AND A.BOARD_CN LIKE CONCAT('%', #{searchKeyword}, '%')
							</when>
							<when test='searchCondition == "2"'>
								AND A.FRST_REGISTER_ID LIKE CONCAT('%', #{searchKeyword}, '%')
							</when>						 
						</choose>
					</if>
				</otherwise>
			</choose>
		</where>
	</sql>
	
	
	<!-- 게시물 상세정보 / 맨 위의 resultMap과 연결 -->
	<select id="selectNotice" resultMap="notice">
		SELECT
			BOARD_ID
		  , BOARD_SJ
		  , BOARD_CN
		  , INQIRE_CO
		  , CREAT_IP
		  , SIGN_AT
		  , OTHBC_AT
		  , USE_AT
		  , ATCH_FILE_ID
		  , FRST_REGIST_PNTTM
		  , FRST_REGISTER_ID
		FROM NOTICE
		WHERE BOARD_ID = #{boardId}
			AND USE_AT = 'Y'
	</select>
	
	
	<!-- 조회수 업데이트 / 포인트나 좋아요 수 업데이트 시에도 이 방법을 사용 -->
	<update id="updateViewCnt" parameterType="egovframework.let.notice.service.NoticeVO">
		UPDATE NOTICE SET 
			INQIRE_CO  = INQIRE_CO + 1 
		WHERE BOARD_ID = #{boardId}
	</update>
	
	
<!-- //////////////////////////////////////////////////////////////////////////////////////// -->	
	<insert id="insertNotice" parameterType="egovframework.let.notice.service.NoticeVO">
		INSERT INTO NOTICE (
			BOARD_ID
			, BOARD_SJ
			, BOARD_CN
			, INQIRE_CO
			, CREAT_IP
			, SIGN_AT
			, OTHBC_AT
			, USE_AT
			, ATCH_FILE_ID
			, FRST_REGIST_PNTTM
			, FRST_REGISTER_ID
			, LAST_UPDT_PNTTM
			, LAST_UPDUSR_ID
		) VALUES ( <!-- 컬럼의 초깃값 확인. 파라미터(form)에서 받아오나 / 디비에서 받아오냐 -->
			#{boardId} <!-- 파라미터에서 받아옴 -->
			, #{boardSj}
			, #{boardCn}
			, 0 <!-- 조회수 처음 insert시 디폴트 0 -->
			, #{creatIp} <!-- 자바에서 생성해서 받아옴 -->
			, #{signAt}
			, #{othbcAt}
			, 'Y' <!-- Y가 디폴트값 -->
			, #{atchFileId}
			, NOW() <!-- DB에서 받아옴 -->
			, #{userId} 
			, NOW()
			, #{userId}
		)
	</insert>
	
	
	<update id="updateNotice" parameterType="egovframework.let.notice.service.NoticeVO">
		UPDATE NOTICE SET
			BOARD_SJ = #{boardSj}
			, BOARD_CN = #{boardCn}
			, SIGN_AT = #{signAt}
			, OTHBC_AT = #{othbcAt}
			<if test='atchFileId != null and atchFileId != ""'>
				, ATCH_FILE_ID = #{atchFileId}
			</if>
			, LAST_UPDT_PNTTM = NOW()
			, LAST_UPDUSR_ID = #{userId}
		WHERE BOARD_ID = #{boardId}
		<if test='mngAt != "Y"'> <!-- ★해커침입방지 / 게시글을 등록한 아이디가 접속한아이디(userId)와 같을 때만 수정하게 -->
			AND FRST_REGISTER_ID = #{userId}
		</if>
	</update>
	
	
	<update id="deleteNotice" parameterType="egovframework.let.notice.service.NoticeVO">
		UPDATE NOTICE SET
			USE_AT = 'N'
		WHERE BOARD_ID = #{boardId}
		<if test='mngAt != "Y"'>
			AND FRST_REGISTER_ID = #{userId}
		</if>
	</update>


</mapper>